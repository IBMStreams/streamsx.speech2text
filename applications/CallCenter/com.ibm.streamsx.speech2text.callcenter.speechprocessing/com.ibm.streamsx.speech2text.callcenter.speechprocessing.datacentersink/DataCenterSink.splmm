/*******************************************************************************
 * Copyright (C) 2016, International Business Machines Corporation
 * All Rights Reserved
 *******************************************************************************/
namespace com.ibm.streamsx.speech2text.callcenter.speechprocessing.datacentersink ;

use com.ibm.streamsx.speech2text.callcenter.types::*; 

composite DataCenterSink
{	 
    param  
        expression<rstring> $connHost    : getSubmissionTimeValue("connHost");
        expression<uint32> $connPort     : (uint32) getSubmissionTimeValue("connPort");
        expression<int32> $numOfWatsonJobs : (int32) getSubmissionTimeValue("numOfWatsonJobs"); 	
        expression<rstring> $systemTag : "setup"; 
			
	graph
				
		/**
		 * Operators ReadFile and RealtimeEmulator are used to emulate
		 * real-time analysis of calls by reading preliminary prepared
		 * data a from text file
		 */
		
           stream<Utterance> ImportUtterancesFromWatson = Import() { 
              param 
					subscription : topic == "Utterance_Data"; 
           }   


 			stream<Utterance> Import_Utterances = Custom(ImportUtterancesFromWatson)
             {
                 logic
                   onTuple ImportUtterancesFromWatson :
                  {
                    submit( ImportUtterancesFromWatson , Import_Utterances );
                  }
             }

		   () as TcpSink_Import_UtterancesStream = TCPSink(Import_Utterances)
		    {
		      param
		          role  : server;
		          port  : $connPort;
		          format : csv;
		      config
		         threadedPort : queue(Import_Utterances,Sys.Wait, 1000000);
		    }

	config
			// tag is overridden using job config
            hostPool : P1=createPool({tags=["dataCenterSink"]},Sys.Shared);
            placement  : host(P1); 
}
